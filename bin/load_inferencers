#!/usr/bin/env ruby
require_relative 'common' and load_extise! { include Extisimo }

l, c, s, t, v, q, p = nil, true, false, 80, true, false, []

ARGV.bind_and_parse! to: :locals do
  use '[<options>] [<path>...]'
  opt 'l    --library=<name>'
  opt 'c -c --[no-]color'
  opt 's -s --[no-]sort'
  opt 't -t --trim[=<length:Integer>]'
  opt 'v -v --[no-]verbose'
  opt 'q -q --quiet'
  arg 'p [<path>...]'
end

l = File.join '..', '..', 'lib', 'extinf' unless l
p = Dir[File.expand_path File.join(l, "{#{Inferencer::TARGETS.map(&:pluralize) * ','}}", '*.rb'), __FILE__] if p.empty?

AutoColor.disable on: self unless c

p.map { |f| File.absolute_path f }.each do |f|
  target, name, _, type, _ = Extinf.resolve_inferencer! file: f, library: l rescue abort $!
  inferencer = persist(Inferencer, target: target, name: name) { |r| r.file, r.type = f, type }

  dump_record inferencer, :inferencer
end
