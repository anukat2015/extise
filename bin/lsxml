#!/usr/bin/env ruby
require_relative 'common'

c, s, t, v, p = true, false, 80, true, [STDIN]

ARGV.bind! to: self do
  use '[<options>] [<file>...]'
  opt 'c -c --[no-]color'
  opt 's -s --[no-]sort'
  opt 't -t --trim[=<length:integer>]'
  opt 'v -v --[no-]verbose'
  arg 'p [<path>...]'
end

AutoColor.disable on: self unless c

def text(e, s, i = 0, o = options.bound)
  k = [o[:t] - (2 * i + e.name.size + 1), 1].max
  s = s.strip.gsub(/\r|\r?\n/, '↵')
  s[k - 1] = '…' if s.size >= k
  s[0..k - 1]
end

def structure(e, i = 0, o = options.bound)
  s = e.children.to_a.select { |x| x.name == 'text' }.map { |x| x.to_s.strip }.join "\n"

  puts "#{'  ' * i}#{e.name.blue} #{text e, s, i, o unless s.empty?}"

  e.attributes.to_h.tap { |h| h.sort if o[:s] }.each do |_, a|
    puts "#{'  ' * i}  #{a.name.yellow} #{text a, a.value, i + 2, o}"
  end

  e.children.to_a.tap { |a| a.sort_by! &:name if o[:s] }.each do |x|
    structure x, i + 1, o unless x.name == 'text'
  end
end

i = v && !options.default?(:p) ? 1 : 0

p.each do |f|
  d = Nokogiri::XML File.open_or f

  puts "#{f.green}" unless i.zero?
  structure d.xpath('/*').first, i
end
