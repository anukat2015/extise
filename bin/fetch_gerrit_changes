#!/usr/bin/env ruby
require_relative 'common' and load_extise!

o, n, w, u = nil, 4, :thread, STDIN
c, v, q = true, false, false

ARGV.bind_and_parse! to: :locals do
  use '[<options>] [<url>]'
  opt 'o -o --output=<path>'
  opt 'n    --parallel[=<count:Integer>]'
  opt 'w    --parallel-worker=(process|thread)'
  opt 'c -c --[no-]color'
  opt 'v -v --[no-]verbose'
  opt 'q -q --quiet'
  arg 'u [<url>]'
end

n = 0 unless options.assigned? :n
v, q = false, true unless n.zero?

AutoColor.enable on: self, colored: c, colorings: {
  /\A *(change): \d+/ => -> (s, _) { s.sub(/(change): (\d+)/, "#{'\1'.blue}: #{'\2'.yellow}") }
}

i = v && !options.default?(:u) ? 1 : 0
u = u.read.strip if u.is_a? IO
r = 1..Float::INFINITY

FileUtils.mkpath changes_directory = o || File.join(GitEclipseOrg::DIRECTORY, 'gerrit-changes')

inform u unless q || i.zero?

process r, count: n, worker: w, progress: !n.zero? do |change_id|
  file = File.join changes_directory, "#{change_id}.json"

  puts "#{'  ' * i}change: #{change_id}" unless q

  next if File.exist? file

  content = `curl -#{'s' if !v || q}S #{u}/changes/#{change_id}/detail`.sub(/\A\)\]\}'\s*/, '')

  next if content.blank? || content =~ /\ANot\s+Found/i

  File.write file, content
end
